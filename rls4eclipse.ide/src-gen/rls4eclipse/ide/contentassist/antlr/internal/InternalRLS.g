/*
 * generated by Xtext 2.20.0
 */
grammar InternalRLS;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package rls4eclipse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package rls4eclipse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import rls4eclipse.services.RLSGrammarAccess;

}
@parser::members {
	private RLSGrammarAccess grammarAccess;

	public void setGrammarAccess(RLSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefixedName
entryRulePrefixedName
:
{ before(grammarAccess.getPrefixedNameRule()); }
	 rulePrefixedName
{ after(grammarAccess.getPrefixedNameRule()); } 
	 EOF 
;

// Rule PrefixedName
rulePrefixedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixedNameAccess().getTAssignment()); }
		(rule__PrefixedName__TAssignment)
		{ after(grammarAccess.getPrefixedNameAccess().getTAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIRIREF
entryRuleIRIREF
:
{ before(grammarAccess.getIRIREFRule()); }
	 ruleIRIREF
{ after(grammarAccess.getIRIREFRule()); } 
	 EOF 
;

// Rule IRIREF
ruleIRIREF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIRIREFAccess().getTAssignment()); }
		(rule__IRIREF__TAssignment)
		{ after(grammarAccess.getIRIREFAccess().getTAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIRIBOL
entryRuleIRIBOL
:
{ before(grammarAccess.getIRIBOLRule()); }
	 ruleIRIBOL
{ after(grammarAccess.getIRIBOLRule()); } 
	 EOF 
;

// Rule IRIBOL
ruleIRIBOL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIRIBOLAccess().getAlternatives()); }
		(rule__IRIBOL__Alternatives)
		{ after(grammarAccess.getIRIBOLAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStriing
entryRuleStriing
:
{ before(grammarAccess.getStriingRule()); }
	 ruleStriing
{ after(grammarAccess.getStriingRule()); } 
	 EOF 
;

// Rule Striing
ruleStriing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStriingAccess().getAlternatives()); }
		(rule__Striing__Alternatives)
		{ after(grammarAccess.getStriingAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLangtagg
entryRuleLangtagg
:
{ before(grammarAccess.getLangtaggRule()); }
	 ruleLangtagg
{ after(grammarAccess.getLangtaggRule()); } 
	 EOF 
;

// Rule Langtagg
ruleLangtagg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLangtaggAccess().getTAssignment()); }
		(rule__Langtagg__TAssignment)
		{ after(grammarAccess.getLangtaggAccess().getTAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRDFLiteral
entryRuleRDFLiteral
:
{ before(grammarAccess.getRDFLiteralRule()); }
	 ruleRDFLiteral
{ after(grammarAccess.getRDFLiteralRule()); } 
	 EOF 
;

// Rule RDFLiteral
ruleRDFLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRDFLiteralAccess().getGroup()); }
		(rule__RDFLiteral__Group__0)
		{ after(grammarAccess.getRDFLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral
:
{ before(grammarAccess.getNumericLiteralRule()); }
	 ruleNumericLiteral
{ after(grammarAccess.getNumericLiteralRule()); } 
	 EOF 
;

// Rule NumericLiteral
ruleNumericLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
		(rule__NumericLiteral__Alternatives)
		{ after(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getAlternatives()); }
		(rule__Term__Alternatives)
		{ after(grammarAccess.getTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepredicateName
entryRulepredicateName
:
{ before(grammarAccess.getPredicateNameRule()); }
	 rulepredicateName
{ after(grammarAccess.getPredicateNameRule()); } 
	 EOF 
;

// Rule predicateName
rulepredicateName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateNameAccess().getAlternatives()); }
		(rule__PredicateName__Alternatives)
		{ after(grammarAccess.getPredicateNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelistOfTerms
entryRulelistOfTerms
:
{ before(grammarAccess.getListOfTermsRule()); }
	 rulelistOfTerms
{ after(grammarAccess.getListOfTermsRule()); } 
	 EOF 
;

// Rule listOfTerms
rulelistOfTerms 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfTermsAccess().getGroup()); }
		(rule__ListOfTerms__Group__0)
		{ after(grammarAccess.getListOfTermsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegativeLiteral
entryRuleNegativeLiteral
:
{ before(grammarAccess.getNegativeLiteralRule()); }
	 ruleNegativeLiteral
{ after(grammarAccess.getNegativeLiteralRule()); } 
	 EOF 
;

// Rule NegativeLiteral
ruleNegativeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegativeLiteralAccess().getGroup()); }
		(rule__NegativeLiteral__Group__0)
		{ after(grammarAccess.getNegativeLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFact
entryRuleFact
:
{ before(grammarAccess.getFactRule()); }
	 ruleFact
{ after(grammarAccess.getFactRule()); } 
	 EOF 
;

// Rule Fact
ruleFact 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactAccess().getGroup()); }
		(rule__Fact__Group__0)
		{ after(grammarAccess.getFactAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePositiveLiteral
entryRulePositiveLiteral
:
{ before(grammarAccess.getPositiveLiteralRule()); }
	 rulePositiveLiteral
{ after(grammarAccess.getPositiveLiteralRule()); } 
	 EOF 
;

// Rule PositiveLiteral
rulePositiveLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositiveLiteralAccess().getGroup()); }
		(rule__PositiveLiteral__Group__0)
		{ after(grammarAccess.getPositiveLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelistOfLiterals
entryRulelistOfLiterals
:
{ before(grammarAccess.getListOfLiteralsRule()); }
	 rulelistOfLiterals
{ after(grammarAccess.getListOfLiteralsRule()); } 
	 EOF 
;

// Rule listOfLiterals
rulelistOfLiterals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfLiteralsAccess().getGroup()); }
		(rule__ListOfLiterals__Group__0)
		{ after(grammarAccess.getListOfLiteralsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelistOfPositiveLiterals
entryRulelistOfPositiveLiterals
:
{ before(grammarAccess.getListOfPositiveLiteralsRule()); }
	 rulelistOfPositiveLiterals
{ after(grammarAccess.getListOfPositiveLiteralsRule()); } 
	 EOF 
;

// Rule listOfPositiveLiterals
rulelistOfPositiveLiterals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfPositiveLiteralsAccess().getGroup()); }
		(rule__ListOfPositiveLiterals__Group__0)
		{ after(grammarAccess.getListOfPositiveLiteralsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataSource
entryRuleDataSource
:
{ before(grammarAccess.getDataSourceRule()); }
	 ruleDataSource
{ after(grammarAccess.getDataSourceRule()); } 
	 EOF 
;

// Rule DataSource
ruleDataSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataSourceAccess().getGroup()); }
		(rule__DataSource__Group__0)
		{ after(grammarAccess.getDataSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getGroup()); }
		(rule__Source__Group__0)
		{ after(grammarAccess.getSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrefix
entryRulePrefix
:
{ before(grammarAccess.getPrefixRule()); }
	 rulePrefix
{ after(grammarAccess.getPrefixRule()); } 
	 EOF 
;

// Rule Prefix
rulePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrefixAccess().getAlternatives()); }
		(rule__Prefix__Alternatives)
		{ after(grammarAccess.getPrefixAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBase
entryRuleBase
:
{ before(grammarAccess.getBaseRule()); }
	 ruleBase
{ after(grammarAccess.getBaseRule()); } 
	 EOF 
;

// Rule Base
ruleBase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseAccess().getGroup()); }
		(rule__Base__Group__0)
		{ after(grammarAccess.getBaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigurable_Literal
entryRuleConfigurable_Literal
:
{ before(grammarAccess.getConfigurable_LiteralRule()); }
	 ruleConfigurable_Literal
{ after(grammarAccess.getConfigurable_LiteralRule()); } 
	 EOF 
;

// Rule Configurable_Literal
ruleConfigurable_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getAlternatives()); }
		(rule__Configurable_Literal__Alternatives)
		{ after(grammarAccess.getConfigurable_LiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebraceDelimitedLiteral
entryRulebraceDelimitedLiteral
:
{ before(grammarAccess.getBraceDelimitedLiteralRule()); }
	 rulebraceDelimitedLiteral
{ after(grammarAccess.getBraceDelimitedLiteralRule()); } 
	 EOF 
;

// Rule braceDelimitedLiteral
rulebraceDelimitedLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBraceDelimitedLiteralAccess().getGroup()); }
		(rule__BraceDelimitedLiteral__Group__0)
		{ after(grammarAccess.getBraceDelimitedLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebraceDelimitedLiteralBody
entryRulebraceDelimitedLiteralBody
:
{ before(grammarAccess.getBraceDelimitedLiteralBodyRule()); }
	 rulebraceDelimitedLiteralBody
{ after(grammarAccess.getBraceDelimitedLiteralBodyRule()); } 
	 EOF 
;

// Rule braceDelimitedLiteralBody
rulebraceDelimitedLiteralBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBraceDelimitedLiteralBodyAccess().getSAssignment()); }
		(rule__BraceDelimitedLiteralBody__SAssignment)
		{ after(grammarAccess.getBraceDelimitedLiteralBodyAccess().getSAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebracketDelimitedLiteral
entryRulebracketDelimitedLiteral
:
{ before(grammarAccess.getBracketDelimitedLiteralRule()); }
	 rulebracketDelimitedLiteral
{ after(grammarAccess.getBracketDelimitedLiteralRule()); } 
	 EOF 
;

// Rule bracketDelimitedLiteral
rulebracketDelimitedLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBracketDelimitedLiteralAccess().getGroup()); }
		(rule__BracketDelimitedLiteral__Group__0)
		{ after(grammarAccess.getBracketDelimitedLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebracketDelimitedLiteralBody
entryRulebracketDelimitedLiteralBody
:
{ before(grammarAccess.getBracketDelimitedLiteralBodyRule()); }
	 rulebracketDelimitedLiteralBody
{ after(grammarAccess.getBracketDelimitedLiteralBodyRule()); } 
	 EOF 
;

// Rule bracketDelimitedLiteralBody
rulebracketDelimitedLiteralBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBracketDelimitedLiteralBodyAccess().getSAssignment()); }
		(rule__BracketDelimitedLiteralBody__SAssignment)
		{ after(grammarAccess.getBracketDelimitedLiteralBodyAccess().getSAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IRIBOL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIRIBOLAccess().getTAssignment_0()); }
		(rule__IRIBOL__TAssignment_0)
		{ after(grammarAccess.getIRIBOLAccess().getTAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIRIBOLAccess().getTAssignment_1()); }
		(rule__IRIBOL__TAssignment_1)
		{ after(grammarAccess.getIRIBOLAccess().getTAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Striing__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStriingAccess().getTAssignment_0()); }
		(rule__Striing__TAssignment_0)
		{ after(grammarAccess.getStriingAccess().getTAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStriingAccess().getTAssignment_1()); }
		(rule__Striing__TAssignment_1)
		{ after(grammarAccess.getStriingAccess().getTAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStriingAccess().getTAssignment_2()); }
		(rule__Striing__TAssignment_2)
		{ after(grammarAccess.getStriingAccess().getTAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStriingAccess().getTAssignment_3()); }
		(rule__Striing__TAssignment_3)
		{ after(grammarAccess.getStriingAccess().getTAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRDFLiteralAccess().getLAssignment_1_0()); }
		(rule__RDFLiteral__LAssignment_1_0)
		{ after(grammarAccess.getRDFLiteralAccess().getLAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRDFLiteralAccess().getGroup_1_1()); }
		(rule__RDFLiteral__Group_1_1__0)
		{ after(grammarAccess.getRDFLiteralAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getTAssignment_0()); }
		(rule__NumericLiteral__TAssignment_0)
		{ after(grammarAccess.getNumericLiteralAccess().getTAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralAccess().getTAssignment_1()); }
		(rule__NumericLiteral__TAssignment_1)
		{ after(grammarAccess.getNumericLiteralAccess().getTAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralAccess().getTAssignment_2()); }
		(rule__NumericLiteral__TAssignment_2)
		{ after(grammarAccess.getNumericLiteralAccess().getTAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getSAssignment_0()); }
		(rule__Term__SAssignment_0)
		{ after(grammarAccess.getTermAccess().getSAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getCAssignment_1()); }
		(rule__Term__CAssignment_1)
		{ after(grammarAccess.getTermAccess().getCAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getSAssignment_2()); }
		(rule__Term__SAssignment_2)
		{ after(grammarAccess.getTermAccess().getSAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getTAssignment_3()); }
		(rule__Term__TAssignment_3)
		{ after(grammarAccess.getTermAccess().getTAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getTAssignment_4()); }
		(rule__Term__TAssignment_4)
		{ after(grammarAccess.getTermAccess().getTAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getTAssignment_5()); }
		(rule__Term__TAssignment_5)
		{ after(grammarAccess.getTermAccess().getTAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getTAssignment_6()); }
		(rule__Term__TAssignment_6)
		{ after(grammarAccess.getTermAccess().getTAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getTtAssignment_7()); }
		(rule__Term__TtAssignment_7)
		{ after(grammarAccess.getTermAccess().getTtAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateNameAccess().getSAssignment_0()); }
		(rule__PredicateName__SAssignment_0)
		{ after(grammarAccess.getPredicateNameAccess().getSAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateNameAccess().getTAssignment_1()); }
		(rule__PredicateName__TAssignment_1)
		{ after(grammarAccess.getPredicateNameAccess().getTAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getPositiveLiteralParserRuleCall_0()); }
		rulePositiveLiteral
		{ after(grammarAccess.getLiteralAccess().getPositiveLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNegativeLiteralParserRuleCall_1()); }
		ruleNegativeLiteral
		{ after(grammarAccess.getLiteralAccess().getNegativeLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementAssignment_0()); }
		(rule__Statement__StatementAssignment_0)
		{ after(grammarAccess.getStatementAccess().getStatementAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1()); }
		(rule__Statement__Group_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getSourceNameAssignment_0_0()); }
		(rule__DataSource__SourceNameAssignment_0_0)
		{ after(grammarAccess.getDataSourceAccess().getSourceNameAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataSourceAccess().getSourceNameAssignment_0_1()); }
		(rule__DataSource__SourceNameAssignment_0_1)
		{ after(grammarAccess.getDataSourceAccess().getSourceNameAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getGroup_0()); }
		(rule__Prefix__Group_0__0)
		{ after(grammarAccess.getPrefixAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrefixAccess().getGroup_1()); }
		(rule__Prefix__Group_1__0)
		{ after(grammarAccess.getPrefixAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurable_Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getTAssignment_0()); }
		(rule__Configurable_Literal__TAssignment_0)
		{ after(grammarAccess.getConfigurable_LiteralAccess().getTAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getTAssignment_1()); }
		(rule__Configurable_Literal__TAssignment_1)
		{ after(grammarAccess.getConfigurable_LiteralAccess().getTAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getSAssignment_2()); }
		(rule__Configurable_Literal__SAssignment_2)
		{ after(grammarAccess.getConfigurable_LiteralAccess().getSAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getSAssignment_3()); }
		(rule__Configurable_Literal__SAssignment_3)
		{ after(grammarAccess.getConfigurable_LiteralAccess().getSAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getStrAssignment_1_0()); }
		(rule__Arguments__StrAssignment_1_0)
		{ after(grammarAccess.getArgumentsAccess().getStrAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentsAccess().getStrAssignment_1_1()); }
		(rule__Arguments__StrAssignment_1_1)
		{ after(grammarAccess.getArgumentsAccess().getStrAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentsAccess().getTAssignment_1_2()); }
		(rule__Arguments__TAssignment_1_2)
		{ after(grammarAccess.getArgumentsAccess().getTAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getBAssignment_1()); }
	(rule__Model__BAssignment_1)?
	{ after(grammarAccess.getModelAccess().getBAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPAssignment_2()); }
	(rule__Model__PAssignment_2)*
	{ after(grammarAccess.getModelAccess().getPAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSAssignment_3()); }
	(rule__Model__SAssignment_3)*
	{ after(grammarAccess.getModelAccess().getSAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getStAssignment_4()); }
	(rule__Model__StAssignment_4)*
	{ after(grammarAccess.getModelAccess().getStAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getETerminalRuleCall_5()); }
	(RULE_E)*
	{ after(grammarAccess.getModelAccess().getETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RDFLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RDFLiteral__Group__0__Impl
	rule__RDFLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRDFLiteralAccess().getSAssignment_0()); }
	(rule__RDFLiteral__SAssignment_0)
	{ after(grammarAccess.getRDFLiteralAccess().getSAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RDFLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRDFLiteralAccess().getAlternatives_1()); }
	(rule__RDFLiteral__Alternatives_1)?
	{ after(grammarAccess.getRDFLiteralAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RDFLiteral__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RDFLiteral__Group_1_1__0__Impl
	rule__RDFLiteral__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRDFLiteralAccess().getDATATYPETerminalRuleCall_1_1_0()); }
	RULE_DATATYPE
	{ after(grammarAccess.getRDFLiteralAccess().getDATATYPETerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RDFLiteral__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRDFLiteralAccess().getDtAssignment_1_1_1()); }
	(rule__RDFLiteral__DtAssignment_1_1_1)
	{ after(grammarAccess.getRDFLiteralAccess().getDtAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfTerms__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfTerms__Group__0__Impl
	rule__ListOfTerms__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfTermsAccess().getTAssignment_0()); }
	(rule__ListOfTerms__TAssignment_0)
	{ after(grammarAccess.getListOfTermsAccess().getTAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfTerms__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfTermsAccess().getGroup_1()); }
	(rule__ListOfTerms__Group_1__0)*
	{ after(grammarAccess.getListOfTermsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfTerms__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfTerms__Group_1__0__Impl
	rule__ListOfTerms__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfTermsAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getListOfTermsAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfTerms__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfTermsAccess().getTAssignment_1_1()); }
	(rule__ListOfTerms__TAssignment_1_1)
	{ after(grammarAccess.getListOfTermsAccess().getTAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NegativeLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegativeLiteral__Group__0__Impl
	rule__NegativeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeLiteralAccess().getTILDETerminalRuleCall_0()); }
	RULE_TILDE
	{ after(grammarAccess.getNegativeLiteralAccess().getTILDETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegativeLiteral__Group__1__Impl
	rule__NegativeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeLiteralAccess().getPredicatenameAssignment_1()); }
	(rule__NegativeLiteral__PredicatenameAssignment_1)
	{ after(grammarAccess.getNegativeLiteralAccess().getPredicatenameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegativeLiteral__Group__2__Impl
	rule__NegativeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeLiteralAccess().getLPARENTerminalRuleCall_2()); }
	RULE_LPAREN
	{ after(grammarAccess.getNegativeLiteralAccess().getLPARENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegativeLiteral__Group__3__Impl
	rule__NegativeLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeLiteralAccess().getTermsAssignment_3()); }
	(rule__NegativeLiteral__TermsAssignment_3)
	{ after(grammarAccess.getNegativeLiteralAccess().getTermsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegativeLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeLiteralAccess().getRPARENTerminalRuleCall_4()); }
	RULE_RPAREN
	{ after(grammarAccess.getNegativeLiteralAccess().getRPARENTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fact__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fact__Group__0__Impl
	rule__Fact__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAccess().getPredicatenameAssignment_0()); }
	(rule__Fact__PredicatenameAssignment_0)
	{ after(grammarAccess.getFactAccess().getPredicatenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fact__Group__1__Impl
	rule__Fact__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getFactAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fact__Group__2__Impl
	rule__Fact__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAccess().getTermsAssignment_2()); }
	(rule__Fact__TermsAssignment_2)
	{ after(grammarAccess.getFactAccess().getTermsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fact__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getFactAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PositiveLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositiveLiteral__Group__0__Impl
	rule__PositiveLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositiveLiteralAccess().getPredicatenameAssignment_0()); }
	(rule__PositiveLiteral__PredicatenameAssignment_0)
	{ after(grammarAccess.getPositiveLiteralAccess().getPredicatenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositiveLiteral__Group__1__Impl
	rule__PositiveLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositiveLiteralAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getPositiveLiteralAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositiveLiteral__Group__2__Impl
	rule__PositiveLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositiveLiteralAccess().getTermsAssignment_2()); }
	(rule__PositiveLiteral__TermsAssignment_2)
	{ after(grammarAccess.getPositiveLiteralAccess().getTermsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PositiveLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositiveLiteralAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getPositiveLiteralAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfLiterals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfLiterals__Group__0__Impl
	rule__ListOfLiterals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfLiteralsAccess().getLAssignment_0()); }
	(rule__ListOfLiterals__LAssignment_0)
	{ after(grammarAccess.getListOfLiteralsAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfLiterals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfLiteralsAccess().getGroup_1()); }
	(rule__ListOfLiterals__Group_1__0)*
	{ after(grammarAccess.getListOfLiteralsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfLiterals__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfLiterals__Group_1__0__Impl
	rule__ListOfLiterals__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfLiteralsAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getListOfLiteralsAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfLiterals__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfLiteralsAccess().getLAssignment_1_1()); }
	(rule__ListOfLiterals__LAssignment_1_1)
	{ after(grammarAccess.getListOfLiteralsAccess().getLAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfPositiveLiterals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfPositiveLiterals__Group__0__Impl
	rule__ListOfPositiveLiterals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfPositiveLiteralsAccess().getLAssignment_0()); }
	(rule__ListOfPositiveLiterals__LAssignment_0)
	{ after(grammarAccess.getListOfPositiveLiteralsAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfPositiveLiterals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfPositiveLiteralsAccess().getGroup_1()); }
	(rule__ListOfPositiveLiterals__Group_1__0)*
	{ after(grammarAccess.getListOfPositiveLiteralsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfPositiveLiterals__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfPositiveLiterals__Group_1__0__Impl
	rule__ListOfPositiveLiterals__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfPositiveLiteralsAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getListOfPositiveLiteralsAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfPositiveLiterals__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfPositiveLiteralsAccess().getLAssignment_1_1()); }
	(rule__ListOfPositiveLiterals__LAssignment_1_1)
	{ after(grammarAccess.getListOfPositiveLiteralsAccess().getLAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getHeadAssignment_0()); }
	(rule__Rule__HeadAssignment_0)
	{ after(grammarAccess.getRuleAccess().getHeadAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getARROWTerminalRuleCall_1()); }
	RULE_ARROW
	{ after(grammarAccess.getRuleAccess().getARROWTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getBodyAssignment_2()); }
	(rule__Rule__BodyAssignment_2)
	{ after(grammarAccess.getRuleAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDOTTerminalRuleCall_3()); }
	RULE_DOT
	{ after(grammarAccess.getRuleAccess().getDOTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAssignment_1_0()); }
	(rule__Statement__StatementAssignment_1_0)
	{ after(grammarAccess.getStatementAccess().getStatementAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getDOTTerminalRuleCall_1_1()); }
	RULE_DOT
	{ after(grammarAccess.getStatementAccess().getDOTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataSource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__0__Impl
	rule__DataSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getAlternatives_0()); }
	(rule__DataSource__Alternatives_0)
	{ after(grammarAccess.getDataSourceAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__1__Impl
	rule__DataSource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getDataSourceAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__2__Impl
	rule__DataSource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getArgAssignment_2()); }
	(rule__DataSource__ArgAssignment_2)
	{ after(grammarAccess.getDataSourceAccess().getArgAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataSource__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataSourceAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getDataSourceAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__0__Impl
	rule__Source__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getSRCTerminalRuleCall_0()); }
	RULE_SRC
	{ after(grammarAccess.getSourceAccess().getSRCTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__1__Impl
	rule__Source__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getPredicatenameAssignment_1()); }
	(rule__Source__PredicatenameAssignment_1)
	{ after(grammarAccess.getSourceAccess().getPredicatenameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__2__Impl
	rule__Source__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getArityAssignment_2()); }
	(rule__Source__ArityAssignment_2)
	{ after(grammarAccess.getSourceAccess().getArityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__3__Impl
	rule__Source__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getCOLONTerminalRuleCall_3()); }
	RULE_COLON
	{ after(grammarAccess.getSourceAccess().getCOLONTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__4__Impl
	rule__Source__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getDataSourceAssignment_4()); }
	(rule__Source__DataSourceAssignment_4)
	{ after(grammarAccess.getSourceAccess().getDataSourceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getDOTTerminalRuleCall_5()); }
	RULE_DOT
	{ after(grammarAccess.getSourceAccess().getDOTTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_0__0__Impl
	rule__Prefix__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getPRFXTerminalRuleCall_0_0()); }
	RULE_PRFX
	{ after(grammarAccess.getPrefixAccess().getPRFXTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_0__1__Impl
	rule__Prefix__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getTAssignment_0_1()); }
	(rule__Prefix__TAssignment_0_1)
	{ after(grammarAccess.getPrefixAccess().getTAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_0__2__Impl
	rule__Prefix__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getIriStringAssignment_0_2()); }
	(rule__Prefix__IriStringAssignment_0_2)
	{ after(grammarAccess.getPrefixAccess().getIriStringAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getDOTTerminalRuleCall_0_3()); }
	RULE_DOT
	{ after(grammarAccess.getPrefixAccess().getDOTTerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prefix__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_1__0__Impl
	rule__Prefix__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getPRFXTerminalRuleCall_1_0()); }
	RULE_PRFX
	{ after(grammarAccess.getPrefixAccess().getPRFXTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_1__1__Impl
	rule__Prefix__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getTAssignment_1_1()); }
	(rule__Prefix__TAssignment_1_1)
	{ after(grammarAccess.getPrefixAccess().getTAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_1__2__Impl
	rule__Prefix__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getIriStringAssignment_1_2()); }
	(rule__Prefix__IriStringAssignment_1_2)
	{ after(grammarAccess.getPrefixAccess().getIriStringAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prefix__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrefixAccess().getDOTTerminalRuleCall_1_3()); }
	RULE_DOT
	{ after(grammarAccess.getPrefixAccess().getDOTTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Base__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Base__Group__0__Impl
	rule__Base__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAccess().getBSTerminalRuleCall_0()); }
	RULE_BS
	{ after(grammarAccess.getBaseAccess().getBSTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Base__Group__1__Impl
	rule__Base__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAccess().getIriStringAssignment_1()); }
	(rule__Base__IriStringAssignment_1)
	{ after(grammarAccess.getBaseAccess().getIriStringAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Base__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseAccess().getDOTTerminalRuleCall_2()); }
	RULE_DOT
	{ after(grammarAccess.getBaseAccess().getDOTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BraceDelimitedLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceDelimitedLiteral__Group__0__Impl
	rule__BraceDelimitedLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceDelimitedLiteralAccess().getBraceDelimitedLiteralAction_0()); }
	()
	{ after(grammarAccess.getBraceDelimitedLiteralAccess().getBraceDelimitedLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceDelimitedLiteral__Group__1__Impl
	rule__BraceDelimitedLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceDelimitedLiteralAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBraceDelimitedLiteralAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceDelimitedLiteral__Group__2__Impl
	rule__BraceDelimitedLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceDelimitedLiteralAccess().getSbAssignment_2()); }
	(rule__BraceDelimitedLiteral__SbAssignment_2)*
	{ after(grammarAccess.getBraceDelimitedLiteralAccess().getSbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BraceDelimitedLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBraceDelimitedLiteralAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBraceDelimitedLiteralAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BracketDelimitedLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketDelimitedLiteral__Group__0__Impl
	rule__BracketDelimitedLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketDelimitedLiteralAccess().getBracketDelimitedLiteralAction_0()); }
	()
	{ after(grammarAccess.getBracketDelimitedLiteralAccess().getBracketDelimitedLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketDelimitedLiteral__Group__1__Impl
	rule__BracketDelimitedLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketDelimitedLiteralAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getBracketDelimitedLiteralAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketDelimitedLiteral__Group__2__Impl
	rule__BracketDelimitedLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketDelimitedLiteralAccess().getSbAssignment_2()); }
	(rule__BracketDelimitedLiteral__SbAssignment_2)*
	{ after(grammarAccess.getBracketDelimitedLiteralAccess().getSbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BracketDelimitedLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBracketDelimitedLiteralAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getBracketDelimitedLiteralAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
	()
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getAlternatives_1()); }
	(rule__Arguments__Alternatives_1)
	{ after(grammarAccess.getArgumentsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2()); }
	(rule__Arguments__Group_2__0)
	{ after(grammarAccess.getArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__0__Impl
	rule__Arguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCOMMATerminalRuleCall_2_0()); }
	RULE_COMMA
	{ after(grammarAccess.getArgumentsAccess().getCOMMATerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getSAssignment_2_1()); }
	(rule__Arguments__SAssignment_2_1)
	{ after(grammarAccess.getArgumentsAccess().getSAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__BAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getBBaseParserRuleCall_1_0()); }
		ruleBase
		{ after(grammarAccess.getModelAccess().getBBaseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPPrefixParserRuleCall_2_0()); }
		rulePrefix
		{ after(grammarAccess.getModelAccess().getPPrefixParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSSourceParserRuleCall_3_0()); }
		ruleSource
		{ after(grammarAccess.getModelAccess().getSSourceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getModelAccess().getStStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixedName__TAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixedNameAccess().getTPNAME_LNTerminalRuleCall_0()); }
		RULE_PNAME_LN
		{ after(grammarAccess.getPrefixedNameAccess().getTPNAME_LNTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IRIREF__TAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIRIREFAccess().getTIRITerminalRuleCall_0()); }
		RULE_IRI
		{ after(grammarAccess.getIRIREFAccess().getTIRITerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IRIBOL__TAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIRIBOLAccess().getTIRIREFParserRuleCall_0_0()); }
		ruleIRIREF
		{ after(grammarAccess.getIRIBOLAccess().getTIRIREFParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IRIBOL__TAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIRIBOLAccess().getTPrefixedNameParserRuleCall_1_0()); }
		rulePrefixedName
		{ after(grammarAccess.getIRIBOLAccess().getTPrefixedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Striing__TAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStriingAccess().getTSTRING_LITERAL1TerminalRuleCall_0_0()); }
		RULE_STRING_LITERAL1
		{ after(grammarAccess.getStriingAccess().getTSTRING_LITERAL1TerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Striing__TAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStriingAccess().getTSTRING_LITERAL2TerminalRuleCall_1_0()); }
		RULE_STRING_LITERAL2
		{ after(grammarAccess.getStriingAccess().getTSTRING_LITERAL2TerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Striing__TAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStriingAccess().getTSTRING_LITERAL_LONG1TerminalRuleCall_2_0()); }
		RULE_STRING_LITERAL_LONG1
		{ after(grammarAccess.getStriingAccess().getTSTRING_LITERAL_LONG1TerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Striing__TAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStriingAccess().getTSTRING_LITERAL_LONG2TerminalRuleCall_3_0()); }
		RULE_STRING_LITERAL_LONG2
		{ after(grammarAccess.getStriingAccess().getTSTRING_LITERAL_LONG2TerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Langtagg__TAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLangtaggAccess().getTLANGTAGTerminalRuleCall_0()); }
		RULE_LANGTAG
		{ after(grammarAccess.getLangtaggAccess().getTLANGTAGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRDFLiteralAccess().getSStriingParserRuleCall_0_0()); }
		ruleStriing
		{ after(grammarAccess.getRDFLiteralAccess().getSStriingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__LAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRDFLiteralAccess().getLLangtaggParserRuleCall_1_0_0()); }
		ruleLangtagg
		{ after(grammarAccess.getRDFLiteralAccess().getLLangtaggParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RDFLiteral__DtAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRDFLiteralAccess().getDtIRIBOLParserRuleCall_1_1_1_0()); }
		ruleIRIBOL
		{ after(grammarAccess.getRDFLiteralAccess().getDtIRIBOLParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__TAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getTINTEGERTerminalRuleCall_0_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getNumericLiteralAccess().getTINTEGERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__TAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getTDECIMALTerminalRuleCall_1_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getNumericLiteralAccess().getTDECIMALTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__TAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getTDOUBLETerminalRuleCall_2_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getNumericLiteralAccess().getTDOUBLETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getSIRIBOLParserRuleCall_0_0()); }
		ruleIRIBOL
		{ after(grammarAccess.getTermAccess().getSIRIBOLParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__CAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getCNumericLiteralParserRuleCall_1_0()); }
		ruleNumericLiteral
		{ after(grammarAccess.getTermAccess().getCNumericLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__SAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getSRDFLiteralParserRuleCall_2_0()); }
		ruleRDFLiteral
		{ after(grammarAccess.getTermAccess().getSRDFLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTUNIVARTerminalRuleCall_3_0()); }
		RULE_UNIVAR
		{ after(grammarAccess.getTermAccess().getTUNIVARTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTEXIVARTerminalRuleCall_4_0()); }
		RULE_EXIVAR
		{ after(grammarAccess.getTermAccess().getTEXIVARTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTVARORPREDNAMETerminalRuleCall_5_0()); }
		RULE_VARORPREDNAME
		{ after(grammarAccess.getTermAccess().getTVARORPREDNAMETerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTNAMED_NULLTerminalRuleCall_6_0()); }
		RULE_NAMED_NULL
		{ after(grammarAccess.getTermAccess().getTNAMED_NULLTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TtAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTtConfigurable_LiteralParserRuleCall_7_0()); }
		ruleConfigurable_Literal
		{ after(grammarAccess.getTermAccess().getTtConfigurable_LiteralParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateName__SAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateNameAccess().getSIRIBOLParserRuleCall_0_0()); }
		ruleIRIBOL
		{ after(grammarAccess.getPredicateNameAccess().getSIRIBOLParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateName__TAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateNameAccess().getTVARORPREDNAMETerminalRuleCall_1_0()); }
		RULE_VARORPREDNAME
		{ after(grammarAccess.getPredicateNameAccess().getTVARORPREDNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__TAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfTermsAccess().getTTermParserRuleCall_0_0()); }
		ruleTerm
		{ after(grammarAccess.getListOfTermsAccess().getTTermParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfTerms__TAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfTermsAccess().getTTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getListOfTermsAccess().getTTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__PredicatenameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegativeLiteralAccess().getPredicatenamePredicateNameParserRuleCall_1_0()); }
		rulepredicateName
		{ after(grammarAccess.getNegativeLiteralAccess().getPredicatenamePredicateNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegativeLiteral__TermsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegativeLiteralAccess().getTermsListOfTermsParserRuleCall_3_0()); }
		rulelistOfTerms
		{ after(grammarAccess.getNegativeLiteralAccess().getTermsListOfTermsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__PredicatenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactAccess().getPredicatenamePredicateNameParserRuleCall_0_0()); }
		rulepredicateName
		{ after(grammarAccess.getFactAccess().getPredicatenamePredicateNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fact__TermsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactAccess().getTermsListOfTermsParserRuleCall_2_0()); }
		rulelistOfTerms
		{ after(grammarAccess.getFactAccess().getTermsListOfTermsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__PredicatenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositiveLiteralAccess().getPredicatenamePredicateNameParserRuleCall_0_0()); }
		rulepredicateName
		{ after(grammarAccess.getPositiveLiteralAccess().getPredicatenamePredicateNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PositiveLiteral__TermsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositiveLiteralAccess().getTermsListOfTermsParserRuleCall_2_0()); }
		rulelistOfTerms
		{ after(grammarAccess.getPositiveLiteralAccess().getTermsListOfTermsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfLiteralsAccess().getLLiteralParserRuleCall_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getListOfLiteralsAccess().getLLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfLiterals__LAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfLiteralsAccess().getLLiteralParserRuleCall_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getListOfLiteralsAccess().getLLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfPositiveLiteralsAccess().getLPositiveLiteralParserRuleCall_0_0()); }
		rulePositiveLiteral
		{ after(grammarAccess.getListOfPositiveLiteralsAccess().getLPositiveLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfPositiveLiterals__LAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfPositiveLiteralsAccess().getLPositiveLiteralParserRuleCall_1_1_0()); }
		rulePositiveLiteral
		{ after(grammarAccess.getListOfPositiveLiteralsAccess().getLPositiveLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__HeadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getHeadListOfPositiveLiteralsParserRuleCall_0_0()); }
		rulelistOfPositiveLiterals
		{ after(grammarAccess.getRuleAccess().getHeadListOfPositiveLiteralsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getBodyListOfLiteralsParserRuleCall_2_0()); }
		rulelistOfLiterals
		{ after(grammarAccess.getRuleAccess().getBodyListOfLiteralsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementRuleParserRuleCall_0_0()); }
		ruleRule
		{ after(grammarAccess.getStatementAccess().getStatementRuleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementFactParserRuleCall_1_0_0()); }
		ruleFact
		{ after(grammarAccess.getStatementAccess().getStatementFactParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__SourceNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getSourceNameDIRECTIVENAMETerminalRuleCall_0_0_0()); }
		RULE_DIRECTIVENAME
		{ after(grammarAccess.getDataSourceAccess().getSourceNameDIRECTIVENAMETerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__SourceNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getSourceNameVARORPREDNAMETerminalRuleCall_0_1_0()); }
		RULE_VARORPREDNAME
		{ after(grammarAccess.getDataSourceAccess().getSourceNameVARORPREDNAMETerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSource__ArgAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataSourceAccess().getArgArgumentsParserRuleCall_2_0()); }
		ruleArguments
		{ after(grammarAccess.getDataSourceAccess().getArgArgumentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__PredicatenameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getPredicatenamePredicateNameParserRuleCall_1_0()); }
		rulepredicateName
		{ after(grammarAccess.getSourceAccess().getPredicatenamePredicateNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__ArityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getArityARITYTerminalRuleCall_2_0()); }
		RULE_ARITY
		{ after(grammarAccess.getSourceAccess().getArityARITYTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__DataSourceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getDataSourceDataSourceParserRuleCall_4_0()); }
		ruleDataSource
		{ after(grammarAccess.getSourceAccess().getDataSourceDataSourceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__TAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getTCOLONTerminalRuleCall_0_1_0()); }
		RULE_COLON
		{ after(grammarAccess.getPrefixAccess().getTCOLONTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__IriStringAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getIriStringIRIREFParserRuleCall_0_2_0()); }
		ruleIRIREF
		{ after(grammarAccess.getPrefixAccess().getIriStringIRIREFParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__TAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getTPNAME_NSTerminalRuleCall_1_1_0()); }
		RULE_PNAME_NS
		{ after(grammarAccess.getPrefixAccess().getTPNAME_NSTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prefix__IriStringAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrefixAccess().getIriStringIRIREFParserRuleCall_1_2_0()); }
		ruleIRIREF
		{ after(grammarAccess.getPrefixAccess().getIriStringIRIREFParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Base__IriStringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseAccess().getIriStringIRIREFParserRuleCall_1_0()); }
		ruleIRIREF
		{ after(grammarAccess.getBaseAccess().getIriStringIRIREFParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurable_Literal__TAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getTPIPE_DELIMITED_LITERALTerminalRuleCall_0_0()); }
		RULE_PIPE_DELIMITED_LITERAL
		{ after(grammarAccess.getConfigurable_LiteralAccess().getTPIPE_DELIMITED_LITERALTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurable_Literal__TAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getTHASH_DELIMITED_LITERALTerminalRuleCall_1_0()); }
		RULE_HASH_DELIMITED_LITERAL
		{ after(grammarAccess.getConfigurable_LiteralAccess().getTHASH_DELIMITED_LITERALTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurable_Literal__SAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getSBraceDelimitedLiteralParserRuleCall_2_0()); }
		rulebraceDelimitedLiteral
		{ after(grammarAccess.getConfigurable_LiteralAccess().getSBraceDelimitedLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurable_Literal__SAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurable_LiteralAccess().getSBracketDelimitedLiteralParserRuleCall_3_0()); }
		rulebracketDelimitedLiteral
		{ after(grammarAccess.getConfigurable_LiteralAccess().getSBracketDelimitedLiteralParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteral__SbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBraceDelimitedLiteralAccess().getSbBraceDelimitedLiteralBodyParserRuleCall_2_0()); }
		rulebraceDelimitedLiteralBody
		{ after(grammarAccess.getBraceDelimitedLiteralAccess().getSbBraceDelimitedLiteralBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BraceDelimitedLiteralBody__SAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBraceDelimitedLiteralBodyAccess().getSUNBRACETerminalRuleCall_0()); }
		RULE_UNBRACE
		{ after(grammarAccess.getBraceDelimitedLiteralBodyAccess().getSUNBRACETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteral__SbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketDelimitedLiteralAccess().getSbBracketDelimitedLiteralBodyParserRuleCall_2_0()); }
		rulebracketDelimitedLiteralBody
		{ after(grammarAccess.getBracketDelimitedLiteralAccess().getSbBracketDelimitedLiteralBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketDelimitedLiteralBody__SAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBracketDelimitedLiteralBodyAccess().getSUNBRACKETTerminalRuleCall_0()); }
		RULE_UNBRACKET
		{ after(grammarAccess.getBracketDelimitedLiteralBodyAccess().getSUNBRACKETTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__StrAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getStrStriingParserRuleCall_1_0_0()); }
		ruleStriing
		{ after(grammarAccess.getArgumentsAccess().getStrStriingParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__StrAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getStrIRIBOLParserRuleCall_1_1_0()); }
		ruleIRIBOL
		{ after(grammarAccess.getArgumentsAccess().getStrIRIBOLParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__TAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getTTermParserRuleCall_1_2_0()); }
		ruleTerm
		{ after(grammarAccess.getArgumentsAccess().getTTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__SAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getSArgumentsParserRuleCall_2_1_0()); }
		ruleArguments
		{ after(grammarAccess.getArgumentsAccess().getSArgumentsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_E : EOF;

RULE_ARITY : '[' RULE_INTEGER ']';

RULE_PRFX : '@prefix ';

RULE_BS : '@base ';

RULE_SRC : '@source';

RULE_LOADCSV : 'load-csv';

RULE_LOADRDF : 'load-rdf';

RULE_SPARQL : 'sparql';

RULE_NAMED_NULL : '_:' (RULE_PN_CHARS_U|'0'..'9') ((RULE_PN_CHARS|'.')* RULE_PN_CHARS)?;

RULE_INTEGER : ('-'|'+')? RULE_DIGITS;

RULE_DECIMAL : ('-'|'+')? (RULE_DIGITS+ '.' RULE_DIGITS*|'.' RULE_DIGITS+);

RULE_DOUBLE : ('+'|'-')? (('0'..'9')+ '.' ('0'..'9')* RULE_EXPONENT|'.' ('0'..'9')+ RULE_EXPONENT|('0'..'9')+ RULE_EXPONENT);

fragment RULE_DIGITS : ('0'..'9')+;

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

RULE_SKIP : (' '|'\t'|'\n'|'\r'|'\f'|'%' ~('\n')* '\n');

RULE_UNBRACE : '{' ~(('{'|'}'))+ '}';

RULE_UNBRACKET : '[' ~(('['|']'))+ ']';

RULE_PIPE_DELIMITED_LITERAL : '|' ~('|')* '|';

RULE_HASH_DELIMITED_LITERAL : '#' ~('#')* '#';

RULE_STRING_LITERAL1 : '\'' (~(('\''|'\\'|'\n'|'\r'))|RULE_ECHAR)* '\'';

RULE_STRING_LITERAL2 : '"' (~(('"'|'\\'|'\n'|'\r'))|RULE_ECHAR)* '"';

RULE_STRING_LITERAL_LONG1 : '\'\'\'' (~(('\''|'\\'))|RULE_ECHAR|'\'' ~('\'')|'\'\'' ~('\''))* '\'\'\'';

RULE_STRING_LITERAL_LONG2 : '"""' (~(('"'|'\\'))|RULE_ECHAR|'"' ~('"')|'""' ~('"'))* '"""';

fragment RULE_ECHAR : '\\' ('t'|'b'|'n'|'r'|'f'|'\\'|'"'|'\'');

RULE_IRI : '<' ~(('>'|'<'|'"'|'{'|'}'|'^'|'\\'|'|'|'`'|'\u0000'..' '))* '>';

RULE_PNAME_LN : RULE_PN_PREFIX? ':' RULE_PN_LOCAL;

RULE_PNAME_NS : RULE_PN_PREFIX ':';

RULE_UNIVAR : RULE_QMARK RULE_VARORPREDNAME;

RULE_EXIVAR : RULE_EMARK RULE_VARORPREDNAME;

RULE_LANGTAG : RULE_AT RULE_A2Z+ ('-' RULE_A2ZN+)*;

RULE_VARORPREDNAME : RULE_A2Z RULE_A2ZN*;

fragment RULE_A2Z : ('a'..'z'|'A'..'Z');

fragment RULE_A2ZN : ('a'..'z'|'A'..'Z'|'0'..'9');

RULE_DIRECTIVENAME : (RULE_AT 'a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')*;

RULE_A2ZNX : ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_');

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_COMMA : ',';

RULE_DOT : '.';

RULE_ARROW : ':-';

fragment RULE_QMARK : '?';

fragment RULE_EMARK : '!';

RULE_TILDE : '~';

RULE_COLON : ':';

RULE_DATATYPE : '^^';

fragment RULE_AT : '@';

fragment RULE_PN_CHARS_BASE : ('A'..'Z'|'a'..'z'|'\u00C0'..'\u00D6'|'\u00D8'..'\u00F6'|'\u00F8'..'\u02FF'|'\u0370'..'\u037D'|'\u037F'..'\u1FFF'|'\u200C'..'\u200D'|'\u2070'..'\u218F'|'\u2C00'..'\u2FEF'|'\u3001'..'\uD7FF'|'\uF900'..'\uFFFD');

fragment RULE_PN_CHARS_U : (RULE_PN_CHARS_BASE|'_');

fragment RULE_PN_CHARS : (RULE_PN_CHARS_U|'-'|'0'..'9'|'\u00B7'|'\u0300'..'\u036F'|'\u203F'..'\u2040');

fragment RULE_PN_PREFIX : RULE_PN_CHARS_BASE ((RULE_PN_CHARS|'.')* RULE_PN_CHARS)?;

fragment RULE_PN_LOCAL : (RULE_PN_CHARS_U|':'|'0'..'9') ((RULE_PN_CHARS|'.'|':')* RULE_PN_CHARS)?;

RULE_NOT : '!';
