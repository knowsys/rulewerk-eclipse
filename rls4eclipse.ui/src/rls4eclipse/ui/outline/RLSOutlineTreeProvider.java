/*
 * generated by Xtext 2.20.0
 */
package rls4eclipse.ui.outline;

/*-
 * #%L
 * rls4eclipse.ui
 * %%
 * Copyright (C) 2018 - 2020 rls4eclipse Developers
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;

/**
 * Customization of the default outline structure.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#outline
 */
public class RLSOutlineTreeProvider extends DefaultOutlineTreeProvider {
	// protected void _createChildren(DocumentRootNode parentNode, EObject
			// modelElement) {
			// createNode(parentNode, modelElement);
			// }

		/*	@Override
			protected void _createChildren(IOutlineNode parentNode, EObject modelElement) {
				for (EObject a : modelElement.eContents()) {
					Object text = textDispatcher.invoke(a);
					System.out.println(text);
					if (!text.equals("Body")) {
						createNode(parentNode, a);
					}
				}
			}*/

			//protected void _createNode(IOutlineNode parentNode, Rule modelElement) {
			// }

			/*
			 * protected void _createChildren(DocumentRootNode parentNode, EObject
			 * modelElement) { for (EObject a : modelElement.eContents()) { if (a instanceof
			 * Statement) { Object text = textDispatcher.invoke(a);
			 * System.out.println(text); } else { createNode(parentNode, a); }
			 * 
			 * } }
			 */
}
